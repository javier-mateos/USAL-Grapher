<Window x:Class="Grapher.EditGraphWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Grapher"
        mc:Ignorable="d"

        Title="Edit Graph" Height="680" Width="400" Icon="/Images/Logo/Logo_32px.ico"
        Background="{StaticResource BaseBackgroundBrush}"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize">

    <Window.Resources>

        <!-- Value Converters -->
        <local:GraphTypeConverter x:Key="GraphTypeConverter"/>
        <local:GraphColorConverter x:Key="GraphColorConverter"/>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    </Window.Resources>

    <Grid Margin="32 16 32 32">

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="1.5*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Graph Image -->
        <Image Grid.Column="0" Grid.Row="0" Height="98" Margin="0 6 32 18"
               Source="{Binding Path=GraphObject.Type, Converter={StaticResource GraphTypeConverter}}"/>

        <!-- Graph Info StackPanel -->
        <StackPanel Grid.Column="1" Grid.Row="0">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- Graph Name -->
                <StackPanel Grid.Column="0" Margin="0 0 10 0">

                    <TextBlock Text="Name" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                    <TextBox Text="{Binding Path=GraphObject.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource normalTextbox}"
                     FontFamily="{StaticResource RobotoRegular}"
                     FontSize="14" Foreground="#DDFFFFFF" />

                </StackPanel>
                
                <!-- AutoGenerated -->
                <StackPanel Grid.Column="1" Margin="10 0 0 0">

                    <TextBlock Text="Auto-Gen" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                    <CheckBox x:Name="AutoGenCheck" HorizontalAlignment="Center"
                              IsChecked="{Binding GraphObject.IsAutoGenerated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                </StackPanel>

            </Grid>
            

            <!-- Graph Visualization -->
            <StackPanel Margin="0 12 0 24">

                <TextBlock Text="Visualization Mode" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <ComboBox SelectedItem="{Binding Path=GraphObject.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:GraphType}}}"/>

            </StackPanel>
            
        </StackPanel>

        <!-- Line Separator -->
        <Separator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"  Margin="0"
                   Background="#1EFFFFFF">
            <Separator.RenderTransform>
                <ScaleTransform ScaleY="2" />
            </Separator.RenderTransform>
        </Separator>

        <!-- Graph Style -->
        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
              Margin="0 24">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.75*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <!-- Graph Hex Color -->
            <StackPanel Grid.Column="0" Grid.Row="0" Margin="0 0 32 0">

                <TextBlock Text="Hex Color" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <TextBox Style="{StaticResource normalTextbox}"
                         FontFamily="{StaticResource RobotoRegular}"
                         FontSize="14" Foreground="#DDFFFFFF">

                    <TextBox.Text>
                        <Binding Path="GraphObject.Color" Mode="TwoWay"
                                     UpdateSourceTrigger="PropertyChanged">

                            <Binding.ValidationRules>
                                <local:StringToHexColor ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

            </StackPanel>

            <!-- Graph Transparency -->
            <StackPanel Grid.Column="1" Grid.Row="0" Margin="0 0 10 0">

                <TextBlock Text="Opacity" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <TextBox Style="{StaticResource normalTextbox}"
                         FontFamily="{StaticResource RobotoRegular}"
                         FontSize="14" Foreground="#DDFFFFFF">

                    <TextBox.Text>
                        <Binding Path="GraphObject.Opacity" Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged">

                            <Binding.ValidationRules>
                                <local:StringToDouble Min="0" Max="1" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    
                </TextBox>

            </StackPanel>

            <!-- Graph Line Thickness -->
            <StackPanel Grid.Column="2" Grid.Row="0" Margin="10 0 0 0">

                <TextBlock Text="Thickness" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <TextBox Style="{StaticResource normalTextbox}"
                         FontFamily="{StaticResource RobotoRegular}"
                         FontSize="14" Foreground="#DDFFFFFF">

                    <TextBox.Text>
                        <Binding Path="GraphObject.Thickness" Mode="TwoWay"
                                     UpdateSourceTrigger="PropertyChanged">

                            <Binding.ValidationRules>
                                <local:StringToDouble Min="0" Max="100" ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    
                </TextBox>

            </StackPanel>

            <!-- Graph Dash Style -->
            <StackPanel Grid.Column="1" Grid.ColumnSpan="2"
                        Grid.Row="1"  Margin="0 12 0 0">

                <TextBlock Text="Dash Style" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <ComboBox SelectedItem="{Binding Path=GraphObject.Dash, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:DashType}}}"/>

            </StackPanel>

            <!-- Graph Cap Style -->
            <StackPanel Grid.Column="1" Grid.ColumnSpan="2"
                        Grid.Row="2"  Margin="0 12 0 0">

                <TextBlock Text="Cap Style" Style="{StaticResource FormLabel}" Margin="0 0 0 4"/>

                <ComboBox SelectedItem="{Binding Path=GraphObject.Cap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Source={local:EnumBindingSource {x:Type PenLineCap}}}"/>

            </StackPanel>
            
            <!-- Color Show Box -->
            <Border Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"
                    Margin="0 26 32 0" CornerRadius="3"
                    BorderBrush="{StaticResource 02dpBackgroundBrush}"
                    BorderThickness="2"
                    Background="{Binding Path=GraphObject.Color, Converter={StaticResource GraphColorConverter}}"
                    Opacity="{Binding GraphObject.Opacity}"/>

        </Grid>

        <!-- Line Separator -->
        <Separator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Margin="0"
                   Background="#1EFFFFFF">
            <Separator.RenderTransform>
                <ScaleTransform ScaleY="2" />
            </Separator.RenderTransform>
        </Separator>

        <!-- Graph Cordinates-->
        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4"
              Margin="0 24 0 0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <!-- Cordinates List -->
            <ListView x:Name="ValueList" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                      ItemsSource="{Binding Path=GraphObject.Points}"
                      IsEnabled="{Binding IsChecked, ElementName=AutoGenCheck, Converter={StaticResource InverseBooleanConverter}}">

                <ListView.InputBindings>
                    <KeyBinding Key="Delete"
                                CommandParameter="{Binding ElementName=ValueList, Path=SelectedItems}"
                                Command="{Binding DeleteData}"/>
                </ListView.InputBindings>
                
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="X" Width="150" DisplayMemberBinding="{Binding XValue}"/>
                        <GridViewColumn Header="Y" Width="150" DisplayMemberBinding="{Binding YValue}"/>
                    </GridView>
                </ListView.View>
                
            </ListView>
            
            <!-- Manual Add Button -->
            <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="0 24 0 0"
                    Style="{StaticResource mediumPrimaryBtn}"
                    Visibility="{Binding IsChecked, ElementName=AutoGenCheck, Converter={StaticResource InverseBooleanConverter}}"
                    Command="{Binding ManualAdd}">

                <Button.Content>
                    <TextBlock Style="{StaticResource TextButton}" Text="ADD POINTS"/>
                </Button.Content>

            </Button>

            <!-- Auto Add Button -->
            <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Margin="0 24 0 0"
                    Style="{StaticResource mediumPrimaryBtn}"
                    Visibility="{Binding IsChecked, ElementName=AutoGenCheck, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding AutoAdd}">

                <Button.Content>
                    <TextBlock Style="{StaticResource TextButton}" Text="EDIT POLYNOMIAL EXPRESSION"/>
                </Button.Content>

            </Button>

        </Grid>

    </Grid>
</Window>
